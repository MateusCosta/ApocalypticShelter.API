// <auto-generated />
using System;
using ApocalypticShelter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ApocalypticShelter.Migrations
{
    [DbContext(typeof(StoreDataContext))]
    [Migration("20190902020219_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ApocalypticShelter.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("Enabled");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("ApocalypticShelter.Models.Shelter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.ToTable("Shelters");
                });

            modelBuilder.Entity("ApocalypticShelter.Models.ShelterStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("Quantity");

                    b.Property<int>("ResourceId");

                    b.Property<int>("ShelterId");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("ShelterId");

                    b.ToTable("ShelterStocks");
                });

            modelBuilder.Entity("ApocalypticShelter.Models.Survivor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(120);

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(120);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<int>("ShelterId");

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("Id");

                    b.HasIndex("ShelterId");

                    b.ToTable("Survivors");
                });

            modelBuilder.Entity("ApocalypticShelter.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("FinalBalance");

                    b.Property<int>("InitialBalance");

                    b.Property<int>("QuantityMoved");

                    b.Property<int>("ResourceId");

                    b.Property<int>("ShelterId");

                    b.Property<int>("SurvivorId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.HasIndex("ShelterId");

                    b.HasIndex("SurvivorId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("ApocalypticShelter.Models.ShelterStock", b =>
                {
                    b.HasOne("ApocalypticShelter.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ApocalypticShelter.Models.Shelter", "Shelter")
                        .WithMany()
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ApocalypticShelter.Models.Survivor", b =>
                {
                    b.HasOne("ApocalypticShelter.Models.Shelter", "Shelter")
                        .WithMany()
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ApocalypticShelter.Models.Transaction", b =>
                {
                    b.HasOne("ApocalypticShelter.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ApocalypticShelter.Models.Shelter", "Shelter")
                        .WithMany()
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ApocalypticShelter.Models.Survivor", "Survivor")
                        .WithMany()
                        .HasForeignKey("SurvivorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
